

## Lab 1


Exercise 1: Running Your First Container 

1. 
2. docker pull tutum/wordpress
3. docker images

PS C:\> docker images
REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE
payment.api                    dev                 4d881715f4e9        4 days ago          280MB
webmvc                         dev                 5b3be935408b        4 days ago          280MB
webspa                         dev                 d30f5c183c5b        4 days ago          280MB
catalog.api                    dev                 d90937dc789c        4 days ago          280MB
ordering.api                   dev                 773c050f5e80        4 days ago          280MB
marketing.api                  dev                 d75a4af78329        4 days ago          280MB
basket.api                     dev                 d476a08354f9        4 days ago          280MB
identity.api                   dev                 92ded5cbfba7        4 days ago          305MB
locations.api                  dev                 ae4be1b7a0be        4 days ago          280MB
webstatus                      dev                 67dd5854fd78        4 days ago          280MB
webapplication1                dev                 4b4324ac6c76        4 days ago          280MB
eshop/payment.api              latest              2e8451a6669a        5 days ago          287MB
eshop/webmvc                   latest              23ae6f8178d6        5 days ago          288MB
eshop/webspa                   latest              6388e8f5d419        5 days ago          284MB
eshop/ordering.api             latest              94d1785c90ca        5 days ago          287MB
eshop/catalog.api              latest              5badeb18bcba        5 days ago          291MB
eshop/marketing.api            latest              b2564c62ce96        5 days ago          290MB
eshop/basket.api               latest              d28fd7e5e539        5 days ago          287MB
eshop/identity.api             latest              2ae172d44793        5 days ago          338MB
eshop/locations.api            latest              1e6c79392601        5 days ago          288MB
eshop/webstatus                latest              a7c4d051044a        5 days ago          283MB
microsoft/aspnetcore           2.0                 383ddf59fdb0        5 days ago          280MB
microsoft/aspnetcore           1.1.2               56b1a6a22549        5 days ago          305MB
mongo                          latest              c07b136da935        6 days ago          359MB
rabbitmq                       3-management        fb11f4e0a6b6        3 weeks ago         124MB
microsoft/mssql-server-linux   latest              a6a93443872a        6 weeks ago         1.43GB
redis                          latest              d4f259423416        7 weeks ago         106MB
d4w/nsenter                    latest              9e4f13a0901e        11 months ago       83.8kB
tutum/wordpress                latest              7e7f97a602ff        18 months ago       477MB
PS C:\>

4. docker run -d -p 8080:80 tutum/wordpress
5. http://localhost:8080/
6. docker run -d -p 8080:80 tutum/wordpress
   docker run -d -p 9090:80 tutum/wordpress 
7. http://localhost:8080/
   http://localhost:9090/


Exercise 2:  Working with Docker Command Line Interface (CLI) 


1. Stopping Single Container
1.1 docker ps
PS C:\> docker ps
CONTAINER ID        IMAGE                                 COMMAND                  CREATED             STATUS              PORTS                                                                                        NAMES
a745d69d118e        tutum/wordpress                       "/run.sh"                About an hour ago   Up About an hour    3306/tcp, 0.0.0.0:9090->80/tcp                                                               upbeat_yonath
0a960fa94300        tutum/wordpress                       "/run.sh"                About an hour ago   Up About an hour    3306/tcp, 0.0.0.0:8080->80/tcp                                                               practical_wright
01b3d2c6dbb1        eshop/webspa:latest                   "dotnet WebSPA.dll"      3 hours ago         Up 2 hours          0.0.0.0:5104->80/tcp                                                                         eshoponcontainers_webspa_1
b5e9e6363a35        eshop/webmvc:latest                   "dotnet WebMVC.dll"      3 hours ago         Up 2 hours          0.0.0.0:5100->80/tcp                                                                         eshoponcontainers_webmvc_1
d58ef5fa9e48        eshop/basket.api:latest               "dotnet Basket.API..."   3 hours ago         Up 2 hours          0.0.0.0:5103->80/tcp                                                                         eshoponcontainers_basket.api_1
dc502ebecba9        eshop/locations.api:latest            "dotnet Locations...."   3 hours ago         Up 2 hours          0.0.0.0:5109->80/tcp                                                                         eshoponcontainers_locations.api_1
6d24c1d9e7e2        eshop/payment.api:latest              "dotnet Payment.AP..."   3 hours ago         Up 2 hours          0.0.0.0:5108->80/tcp                                                                         eshoponcontainers_payment.api_1
0860d6b47619        eshop/webstatus:latest                "dotnet WebStatus.dll"   3 hours ago         Up 2 hours          0.0.0.0:5107->80/tcp                                                                         eshoponcontainers_webstatus_1
b1172e3068ce        rabbitmq:3-management                 "docker-entrypoint..."   3 hours ago         Up 2 hours          4369/tcp, 5671/tcp, 0.0.0.0:5672->5672/tcp, 15671/tcp, 25672/tcp, 0.0.0.0:15672->15672/tcp   eshoponcontainers_rabbitmq_1
ccd35107f769        microsoft/mssql-server-linux:latest   "/bin/sh -c /opt/m..."   3 hours ago         Up 2 hours          0.0.0.0:5433->1433/tcp                                                                       eshoponcontainers_sql.data_1
67e7c119c69a        mongo                                 "docker-entrypoint..."   4 days ago          Up 2 hours          0.0.0.0:27017->27017/tcp                                                                     eshoponcontainers_nosql.data_1
090e973c9191        redis                                 "docker-entrypoint..."   4 days ago          Up 2 hours          0.0.0.0:6379->6379/tcp                                                                       eshoponcontainers_basket.data_1
PS C:\>


1.2 docker stop a745d69d118e
    docker stop 0a960fa94300

docker stop a745d69d118e 0a960fa94300 01b3d2c6dbb1 b5e9e6363a35 d58ef5fa9e48 dc502ebecba9 6d24c1d9e7e2 0860d6b47619 b1172e3068ce ccd35107f769 67e7c119c69a 090e973c9191 

PS C:\> docker stop a745d69d118e 0a960fa94300 01b3d2c6dbb1 b5e9e6363a35 d58ef5fa9e48 dc502ebecba9 6d24c1d9e7e2 0860d6b47619 b1172e3068ce ccd35107f769 67e7c119c69a 090e973c9191
a745d69d118e
0a960fa94300
01b3d2c6dbb1
b5e9e6363a35
d58ef5fa9e48
dc502ebecba9
6d24c1d9e7e2
0860d6b47619
b1172e3068ce
ccd35107f769
67e7c119c69a
090e973c9191
PS C:\>

1.3 docker ps

PS C:\> docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
PS C:\>


2. Restart a Container
2.1 docker start <<CONTAINER-ID>>
2.2 docker ps


3. Removing a Container
3.1 
3.2 docker rm –f <<CONTAINER-ID>>


4. Stopping All Containers
4.1 docker stop $(docker ps -a -q)


5. Removing WordPress Container Image
5.1 
5.2 docker images –a
5.3 docker rmi <<IMAGE ID>> --force
5.4 docker images


Exercise 3:  Building Custom Container Images with Dockerfile 

1. Building and Running Node.JS Application as Container 
1.1 labs/module1/nodejs
    cd C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nodejs
1.2 ls

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nodejs> ls


    Directory: C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nodejs


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        8/23/2017   7:11 PM            298 Dockerfile
-a----        8/23/2017   7:11 PM            245 package.json
-a----        8/23/2017   7:11 PM            258 server.js


PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nodejs>

1.3 sudo nano Dockerfile

1.4 change the text from “Razi Rais” to your name 

1.5 ready to build 

1.6 docker build -t mynodejs .

1.7 docker images

1.8 docker run -d -p 8080:8080 mynodejs

1.9 http://localhost:8080/

Hello Node.js!!! 


2. Building and Running NGINX Container  
2.1 labs/module1/nginx
2.2 cd C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nginx\
2.3 ls

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nginx> ls


    Directory: C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nginx


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        8/23/2017   7:11 PM            166 Dockerfile
-a----        8/23/2017   7:11 PM             65 index.html


PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nginx>

2.4 sudo nano Dockerfile

2.5 change the text from “Razi Rais” to your name 

2.6 docker build -t mynginx .

2.7 docker images

2.8 docker run -d -p 8081:80 mynginx

2.9 http://localhost:8081/

Hello NGINX!!! 



3. Building and Running ASP.NET Core 1.1 Application Inside Container 
3.1 will build Asp.NET Core 1.1 
3.2 cd /home/super/demos/module1/aspnetcore
    cd C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore
    ls

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> ls


    Directory: C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----        9/13/2017  12:07 PM                Controllers
d-----        9/13/2017  12:07 PM                Views
d-----        9/13/2017  12:07 PM                wwwroot
-a----        8/23/2017   7:11 PM             33 .bowerrc
-a----        8/23/2017   7:11 PM           3655 .gitignore
-a----        8/23/2017   7:11 PM            168 appsettings.Development.json
-a----        8/23/2017   7:11 PM            105 appsettings.json
-a----        8/23/2017   7:11 PM            197 bower.json
-a----        8/23/2017   7:11 PM            604 bundleconfig.json
-a----        8/23/2017   7:11 PM             98 Dockerfile
-a----        8/23/2017   7:11 PM            581 mywebapp.csproj
-a----        8/23/2017   7:11 PM            547 Program.cs
-a----        8/23/2017   7:11 PM           1959 Startup.cs


PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

3.3 sudo dotnet restore

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> dotnet restore
  Restoring packages for C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore\mywebapp.csproj...
  Installing Microsoft.Net.Http.Headers 1.1.0.
  Installing Microsoft.AspNetCore.Http.Features 1.1.0.
  Installing Microsoft.Extensions.Logging.Abstractions 1.1.0.
  Installing Microsoft.Extensions.Configuration.Abstractions 1.1.0.
  Installing Microsoft.AspNetCore 1.1.1.
  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 1.1.0.
  Installing Microsoft.AspNetCore.StaticFiles 1.1.1.
  Installing Microsoft.Extensions.Configuration.Binder 1.1.1.
  Installing Microsoft.Extensions.Logging.Debug 1.1.1.
  Installing Microsoft.VisualStudio.Web.BrowserLink 1.1.0.
  Installing Microsoft.AspNetCore.HttpOverrides 1.1.1.
  Installing Microsoft.AspNetCore.Diagnostics 1.1.1.
  Installing Microsoft.Extensions.Configuration 1.1.1.
  Installing Microsoft.AspNetCore.Hosting 1.1.1.
  Installing Microsoft.AspNetCore.Http.Extensions 1.1.0.
  Installing Microsoft.AspNetCore.Server.IISIntegration 1.1.1.
  Installing Microsoft.AspNetCore.Http.Abstractions 1.1.0.
  Installing Microsoft.AspNetCore.Server.Kestrel 1.1.1.
  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 1.1.1.
  Installing Microsoft.AspNetCore.Hosting.Abstractions 1.1.0.
  Installing Microsoft.Extensions.Configuration.FileExtensions 1.1.1.
  Installing Microsoft.Extensions.Configuration.Json 1.1.1.
  Installing Microsoft.Extensions.Options.ConfigurationExtensions 1.1.1.
  Installing Microsoft.Extensions.Logging 1.1.1.
  Installing Microsoft.Extensions.Logging.Console 1.1.1.
  Generating MSBuild file C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore\obj\mywebapp.csproj.nuget.g.props.
  Generating MSBuild file C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore\obj\mywebapp.csproj.nuget.g.targets.
  Restore completed in 2.9 sec for C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore\mywebapp.csproj.
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

3.4 sudo dotnet build

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> dotnet build
Microsoft (R) Build Engine version 15.3.409.57025 for .NET Core
Copyright (C) Microsoft Corporation. All rights reserved.

  mywebapp -> C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore\bin\Debug\netcoreapp1.1\mywebapp.dll

Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:03.69
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

3.5 sudo dotnet publish -o published

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> dotnet publish -o published
Microsoft (R) Build Engine version 15.3.409.57025 for .NET Core
Copyright (C) Microsoft Corporation. All rights reserved.

  mywebapp -> C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore\bin\Debug\netcoreapp1.1\mywebapp.dll
  mywebapp -> C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore\published\
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

3.6 nano Dockerfile

3.7 docker build -t myaspcoreapp:1.1 . 

3.8 docker run -d -p 8090:80 myaspcoreapp:1.1

3.9 http://localhost:8090

--
admin
P@ssw0rd
--


Exercise 4:  Interaction with a Running Container 

1. Interaction with a Running Container  

1.1 docker ps

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
0e59619752ee        myaspcoreapp:1.1    "dotnet mywebapp.dll"    36 minutes ago      Up 36 minutes       0.0.0.0:8090->80/tcp     wizardly_montalcini
d5c4fb4d6627        mynginx             "nginx -g 'daemon ..."   44 minutes ago      Up 44 minutes       0.0.0.0:8081->80/tcp     trusting_wescoff
f3fda1dd2759        mynodejs            "npm start"              About an hour ago   Up About an hour    0.0.0.0:8080->8080/tcp   mystifying_yalow
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

1.2 docker exec -it <<CONTAINER ID OR NAME>> bash

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker exec -it f3fda1dd2759 bash
root@f3fda1dd2759:/usr/src/app# ls
Dockerfile  node_modules  package.json  server.js
root@f3fda1dd2759:/usr/src/app# ps ax
   PID TTY      STAT   TIME COMMAND
     1 ?        Ssl    0:00 npm
    16 ?        S      0:00 sh -c node server.js
    17 ?        Sl     0:00 node server.js
    23 pts/0    Ss     0:00 bash
    29 pts/0    R+     0:00 ps ax
root@f3fda1dd2759:/usr/src/app# exit

1.3 ls

root@f3fda1dd2759:/usr/src/app# ls
Dockerfile  node_modules  package.json  server.js
root@f3fda1dd2759:/usr/src/app# ps ax
   PID TTY      STAT   TIME COMMAND
     1 ?        Ssl    0:00 npm
    16 ?        S      0:00 sh -c node server.js
    17 ?        Sl     0:00 node server.js
    23 pts/0    Ss     0:00 bash
    29 pts/0    R+     0:00 ps ax
root@f3fda1dd2759:/usr/src/app# exit
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>


2. Making Changes to a Running Container  
2.1 
2.2 server.js
2.3 
2.4 apt-get update
2.5 apt-get install nano
2.6 nano server.js
2.7 Hello Node.js again !!!
2.8 CTRL + X
2.9 exit
2.10 docker stop <<CONTAINER ID>>
     docker stop f3fda1dd2759
2.11 docker start <<CONTAINER ID>>
     docker start f3fda1dd2759

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker stop f3fda1dd2759
f3fda1dd2759
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
0e59619752ee        myaspcoreapp:1.1    "dotnet mywebapp.dll"    About an hour ago   Up About an hour    0.0.0.0:8090->80/tcp   wizardly_montalcini
d5c4fb4d6627        mynginx             "nginx -g 'daemon ..."   About an hour ago   Up About an hour    0.0.0.0:8081->80/tcp   trusting_wescoff
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker start f3fda1dd2759
f3fda1dd2759
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
0e59619752ee        myaspcoreapp:1.1    "dotnet mywebapp.dll"    About an hour ago   Up About an hour    0.0.0.0:8090->80/tcp     wizardly_montalcini
d5c4fb4d6627        mynginx             "nginx -g 'daemon ..."   About an hour ago   Up About an hour    0.0.0.0:8081->80/tcp     trusting_wescoff
f3fda1dd2759        mynodejs            "npm start"              About an hour ago   Up 1 second         0.0.0.0:8080->8080/tcp   mystifying_yalow
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

2.12 http://localhost:8080/

Hello Node.js again!!! 


3. Interaction with a Running Container  
3.1 
3.2 docker commit f3fda1dd2759 mynodejsv2
3.3 docker images

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker commit f3fda1dd2759 mynodejsv2
sha256:a4a76c1e96f2322ec83d83c0d56a7e7bfc96f9477609528a45140895e15eb9f8
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> docker images
REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE
mynodejsv2                     latest              a4a76c1e96f2        6 seconds ago       678MB
myaspcoreapp                   1.1                 d60fd755e7c4        About an hour ago   322MB
mynginx                        latest              d42f94f3967f        About an hour ago   15.5MB
mynodejs                       latest              ee0562d56e8c        About an hour ago   664MB
node                           boron               199c593b6b87        14 hours ago        661MB
microsoft/aspnetcore           1.1                 060c4f096c7e        29 hours ago        305MB
payment.api                    dev                 4d881715f4e9        5 days ago          280MB
webmvc                         dev                 5b3be935408b        5 days ago          280MB
webspa                         dev                 d30f5c183c5b        5 days ago          280MB
catalog.api                    dev                 d90937dc789c        5 days ago          280MB
ordering.api                   dev                 773c050f5e80        5 days ago          280MB
marketing.api                  dev                 d75a4af78329        5 days ago          280MB
basket.api                     dev                 d476a08354f9        5 days ago          280MB
identity.api                   dev                 92ded5cbfba7        5 days ago          305MB
locations.api                  dev                 ae4be1b7a0be        5 days ago          280MB
webstatus                      dev                 67dd5854fd78        5 days ago          280MB
webapplication1                dev                 4b4324ac6c76        5 days ago          280MB
eshop/payment.api              latest              2e8451a6669a        5 days ago          287MB
eshop/webmvc                   latest              23ae6f8178d6        5 days ago          288MB
eshop/webspa                   latest              6388e8f5d419        5 days ago          284MB
eshop/ordering.api             latest              94d1785c90ca        5 days ago          287MB
eshop/catalog.api              latest              5badeb18bcba        5 days ago          291MB
eshop/marketing.api            latest              b2564c62ce96        5 days ago          290MB
eshop/basket.api               latest              d28fd7e5e539        5 days ago          287MB
eshop/identity.api             latest              2ae172d44793        5 days ago          338MB
eshop/locations.api            latest              1e6c79392601        5 days ago          288MB
eshop/webstatus                latest              a7c4d051044a        5 days ago          283MB
microsoft/aspnetcore           2.0                 383ddf59fdb0        5 days ago          280MB
microsoft/aspnetcore           1.1.2               56b1a6a22549        5 days ago          305MB
mongo                          latest              c07b136da935        6 days ago          359MB
nginx                          stable-alpine       b5d3fa128aff        6 days ago          15.5MB
rabbitmq                       3-management        fb11f4e0a6b6        3 weeks ago         124MB
microsoft/mssql-server-linux   latest              a6a93443872a        6 weeks ago         1.43GB
redis                          latest              d4f259423416        7 weeks ago         106MB
d4w/nsenter                    latest              9e4f13a0901e        11 months ago       83.8kB
tutum/wordpress                latest              7e7f97a602ff        18 months ago       477MB
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

3.4 

3.5 docker run -d -p 8082:8080 mynodejsv2

3.6 curl http://<<IP or DNS>>:8082

http://localhost:8082/
Hello Node.js again!!! 


Exercise 5:  Tagging 

1. Tagging Existing Container Image
1.1 docker build –t imagename:tag .
1.2 docker tag <<IMAGE ID>> mynodejs:v1
1.3 docker images

2. Tagging New Container Image
2.1 “:tag” 
2.2 labs/module1/nginx
2.3 docker build -t nginxsample:v1 .

8136b17d14cd3c6ee4bc5ddac302de7316d76d9d208fc14b454c14065092da49
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore> cd ..\nginx\
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nginx> docker build -t nginxsample:v1 .
Sending build context to Docker daemon  3.072kB
Step 1/4 : FROM nginx:stable-alpine
 ---> b5d3fa128aff
Step 2/4 : MAINTAINER Razi Rais
 ---> Using cache
 ---> 3f4ee7f6dfec
Step 3/4 : COPY index.html /usr/share/nginx/html/index.html
 ---> Using cache
 ---> d06d1f27dfda
Step 4/4 : CMD nginx -g daemon off;
 ---> Using cache
 ---> d42f94f3967f
Successfully built d42f94f3967f
Successfully tagged nginxsample:v1
SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have '-rwxr-xr-x' permissions. It is recommended to double check and reset permissions for sensitive files and director
ies.
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nginx>

2.4 docker images


Exercise 6:  ASP.NET Core Container

1. Building and Running ASP.NET Core 1.1 Application Inside Container 
1.1 you will build Asp.NET Core 1.1 application 
1.2 docker stop (docker ps -a -q)
1.3 cd /home/super/labs/module1/aspnetcore

PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\nginx> cd ..\aspnetcore
PS C:\Users\admin\Desktop\Alfa\Alfa\Labs\labs\module1\aspnetcore>

1.4 sudo dotnet restore
1.5 sudo dotnet build
1.6 sudo dotnet publish -o published
1.7 nano Dockerfile
1.8 docker build -t aspcoreapp:1.1 . 
1.9 docker run -d -p 8080:80 aspcoreapp:1.1
1.10 curl http://localhost:8080
